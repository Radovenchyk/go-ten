name: Build PR
# Builds and runs tests on each push to a branch PR'ed against main.

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'design/**'
      - 'planning/**'
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.4

      # Makes sure the artifacts are built correctly
      - name: Build
        run: go build -v ./...

      # Makes sure the binaries for the eth2network are avail for all other tests
      - name: Download eth2network binaries
        run: go test ./... -v -count=1 -run TestEnsureBinariesAreAvail

      # Close specified ports using lsof before testing / local port list compiled from ./integration/constants.go
      - name: Close Integration Test Ports
        run: |
          lowest_port=8000
          highest_port=58000
          additional_ports=(80 81 99)

          pids=$(lsof -iTCP:$lowest_port-$highest_port -sTCP:LISTEN -t)
          if [ -z "$pids" ]; then
            echo "No processes are listening on ports from $lowest_port to $highest_port"
          else
            for pid in $pids; do
              echo "Process $pid is listening on one of the ports from $lowest_port to $highest_port"
            done
            for pid in $pids; do
              echo "Killing process $pid on one of the ports from $lowest_port to $highest_port"
              kill -9 $pid || true
            done
          fi

          echo "Additional ports: ${additional_ports[@]}"
          for port in "${additional_ports[@]}"; do
            pids=$(lsof -ti TCP:$port)
            if [ -z "$pids" ]; then
              echo "No processes are listening on port $port"
            else
              for pid in $pids; do
                echo "Killing process $pid on port $port"
                kill $pid || true
              done
            fi
          done

      - name: Test
        run: go test --failfast -v ./... -count=1 -timeout 5m

      - name: Store simulation logs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ci-logs
          path: |
            integration/.build/simulations/sim-log-*.txt
            integration/.build/noderunner/noderunner-*.txt
            integration/.build/wallet_extension/wal-ext-*.txt
            integration/.build/eth2/*
            integration/.build/faucet/*
            integration/.build/tenscan/*
            integration/.build/tengateway/*
            integration/.build/contractdeployer/*
            integration/.build/smartcontracts/*
          retention-days: 1


