// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ObscuroL2Bridge

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ObscuroL2BridgeMetaData contains all meta data concerning the ObscuroL2Bridge contract.
var ObscuroL2BridgeMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"messenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"remoteBridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"remoteAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"localAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"CreatedWrappedToken\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"crossChainAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createWrappedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"hasTokenMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"localToRemoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"receiveAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"remoteToLocalToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"sendAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"sendNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wrappedTokens\",\"outputs\":[{\"internalType\":\"contractObscuroERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "",
}

// ObscuroL2BridgeABI is the input ABI used to generate the binding from.
// Deprecated: Use ObscuroL2BridgeMetaData.ABI instead.
var ObscuroL2BridgeABI = ObscuroL2BridgeMetaData.ABI

// ObscuroL2BridgeBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ObscuroL2BridgeMetaData.Bin instead.
var ObscuroL2BridgeBin = ObscuroL2BridgeMetaData.Bin

// DeployObscuroL2Bridge deploys a new Ethereum contract, binding an instance of ObscuroL2Bridge to it.
func DeployObscuroL2Bridge(auth *bind.TransactOpts, backend bind.ContractBackend, messenger common.Address, remoteBridge common.Address) (common.Address, *types.Transaction, *ObscuroL2Bridge, error) {
	parsed, err := ObscuroL2BridgeMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ObscuroL2BridgeBin), backend, messenger, remoteBridge)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ObscuroL2Bridge{ObscuroL2BridgeCaller: ObscuroL2BridgeCaller{contract: contract}, ObscuroL2BridgeTransactor: ObscuroL2BridgeTransactor{contract: contract}, ObscuroL2BridgeFilterer: ObscuroL2BridgeFilterer{contract: contract}}, nil
}

// ObscuroL2Bridge is an auto generated Go binding around an Ethereum contract.
type ObscuroL2Bridge struct {
	ObscuroL2BridgeCaller     // Read-only binding to the contract
	ObscuroL2BridgeTransactor // Write-only binding to the contract
	ObscuroL2BridgeFilterer   // Log filterer for contract events
}

// ObscuroL2BridgeCaller is an auto generated read-only Go binding around an Ethereum contract.
type ObscuroL2BridgeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ObscuroL2BridgeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ObscuroL2BridgeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ObscuroL2BridgeFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ObscuroL2BridgeFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ObscuroL2BridgeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ObscuroL2BridgeSession struct {
	Contract     *ObscuroL2Bridge  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ObscuroL2BridgeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ObscuroL2BridgeCallerSession struct {
	Contract *ObscuroL2BridgeCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ObscuroL2BridgeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ObscuroL2BridgeTransactorSession struct {
	Contract     *ObscuroL2BridgeTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ObscuroL2BridgeRaw is an auto generated low-level Go binding around an Ethereum contract.
type ObscuroL2BridgeRaw struct {
	Contract *ObscuroL2Bridge // Generic contract binding to access the raw methods on
}

// ObscuroL2BridgeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ObscuroL2BridgeCallerRaw struct {
	Contract *ObscuroL2BridgeCaller // Generic read-only contract binding to access the raw methods on
}

// ObscuroL2BridgeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ObscuroL2BridgeTransactorRaw struct {
	Contract *ObscuroL2BridgeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewObscuroL2Bridge creates a new instance of ObscuroL2Bridge, bound to a specific deployed contract.
func NewObscuroL2Bridge(address common.Address, backend bind.ContractBackend) (*ObscuroL2Bridge, error) {
	contract, err := bindObscuroL2Bridge(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ObscuroL2Bridge{ObscuroL2BridgeCaller: ObscuroL2BridgeCaller{contract: contract}, ObscuroL2BridgeTransactor: ObscuroL2BridgeTransactor{contract: contract}, ObscuroL2BridgeFilterer: ObscuroL2BridgeFilterer{contract: contract}}, nil
}

// NewObscuroL2BridgeCaller creates a new read-only instance of ObscuroL2Bridge, bound to a specific deployed contract.
func NewObscuroL2BridgeCaller(address common.Address, caller bind.ContractCaller) (*ObscuroL2BridgeCaller, error) {
	contract, err := bindObscuroL2Bridge(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ObscuroL2BridgeCaller{contract: contract}, nil
}

// NewObscuroL2BridgeTransactor creates a new write-only instance of ObscuroL2Bridge, bound to a specific deployed contract.
func NewObscuroL2BridgeTransactor(address common.Address, transactor bind.ContractTransactor) (*ObscuroL2BridgeTransactor, error) {
	contract, err := bindObscuroL2Bridge(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ObscuroL2BridgeTransactor{contract: contract}, nil
}

// NewObscuroL2BridgeFilterer creates a new log filterer instance of ObscuroL2Bridge, bound to a specific deployed contract.
func NewObscuroL2BridgeFilterer(address common.Address, filterer bind.ContractFilterer) (*ObscuroL2BridgeFilterer, error) {
	contract, err := bindObscuroL2Bridge(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ObscuroL2BridgeFilterer{contract: contract}, nil
}

// bindObscuroL2Bridge binds a generic wrapper to an already deployed contract.
func bindObscuroL2Bridge(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ObscuroL2BridgeABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ObscuroL2Bridge *ObscuroL2BridgeRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ObscuroL2Bridge.Contract.ObscuroL2BridgeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ObscuroL2Bridge *ObscuroL2BridgeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.ObscuroL2BridgeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ObscuroL2Bridge *ObscuroL2BridgeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.ObscuroL2BridgeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ObscuroL2Bridge *ObscuroL2BridgeCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ObscuroL2Bridge.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.contract.Transact(opts, method, params...)
}

// HasTokenMapping is a free data retrieval call binding the contract method 0x9813c7b2.
//
// Solidity: function hasTokenMapping(address wrappedToken) view returns(bool)
func (_ObscuroL2Bridge *ObscuroL2BridgeCaller) HasTokenMapping(opts *bind.CallOpts, wrappedToken common.Address) (bool, error) {
	var out []interface{}
	err := _ObscuroL2Bridge.contract.Call(opts, &out, "hasTokenMapping", wrappedToken)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasTokenMapping is a free data retrieval call binding the contract method 0x9813c7b2.
//
// Solidity: function hasTokenMapping(address wrappedToken) view returns(bool)
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) HasTokenMapping(wrappedToken common.Address) (bool, error) {
	return _ObscuroL2Bridge.Contract.HasTokenMapping(&_ObscuroL2Bridge.CallOpts, wrappedToken)
}

// HasTokenMapping is a free data retrieval call binding the contract method 0x9813c7b2.
//
// Solidity: function hasTokenMapping(address wrappedToken) view returns(bool)
func (_ObscuroL2Bridge *ObscuroL2BridgeCallerSession) HasTokenMapping(wrappedToken common.Address) (bool, error) {
	return _ObscuroL2Bridge.Contract.HasTokenMapping(&_ObscuroL2Bridge.CallOpts, wrappedToken)
}

// LocalToRemoteToken is a free data retrieval call binding the contract method 0x9e405b71.
//
// Solidity: function localToRemoteToken(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeCaller) LocalToRemoteToken(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _ObscuroL2Bridge.contract.Call(opts, &out, "localToRemoteToken", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// LocalToRemoteToken is a free data retrieval call binding the contract method 0x9e405b71.
//
// Solidity: function localToRemoteToken(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) LocalToRemoteToken(arg0 common.Address) (common.Address, error) {
	return _ObscuroL2Bridge.Contract.LocalToRemoteToken(&_ObscuroL2Bridge.CallOpts, arg0)
}

// LocalToRemoteToken is a free data retrieval call binding the contract method 0x9e405b71.
//
// Solidity: function localToRemoteToken(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeCallerSession) LocalToRemoteToken(arg0 common.Address) (common.Address, error) {
	return _ObscuroL2Bridge.Contract.LocalToRemoteToken(&_ObscuroL2Bridge.CallOpts, arg0)
}

// RemoteToLocalToken is a free data retrieval call binding the contract method 0x008d48e3.
//
// Solidity: function remoteToLocalToken(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeCaller) RemoteToLocalToken(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _ObscuroL2Bridge.contract.Call(opts, &out, "remoteToLocalToken", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RemoteToLocalToken is a free data retrieval call binding the contract method 0x008d48e3.
//
// Solidity: function remoteToLocalToken(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) RemoteToLocalToken(arg0 common.Address) (common.Address, error) {
	return _ObscuroL2Bridge.Contract.RemoteToLocalToken(&_ObscuroL2Bridge.CallOpts, arg0)
}

// RemoteToLocalToken is a free data retrieval call binding the contract method 0x008d48e3.
//
// Solidity: function remoteToLocalToken(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeCallerSession) RemoteToLocalToken(arg0 common.Address) (common.Address, error) {
	return _ObscuroL2Bridge.Contract.RemoteToLocalToken(&_ObscuroL2Bridge.CallOpts, arg0)
}

// WrappedTokens is a free data retrieval call binding the contract method 0xd5c6b504.
//
// Solidity: function wrappedTokens(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeCaller) WrappedTokens(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _ObscuroL2Bridge.contract.Call(opts, &out, "wrappedTokens", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WrappedTokens is a free data retrieval call binding the contract method 0xd5c6b504.
//
// Solidity: function wrappedTokens(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) WrappedTokens(arg0 common.Address) (common.Address, error) {
	return _ObscuroL2Bridge.Contract.WrappedTokens(&_ObscuroL2Bridge.CallOpts, arg0)
}

// WrappedTokens is a free data retrieval call binding the contract method 0xd5c6b504.
//
// Solidity: function wrappedTokens(address ) view returns(address)
func (_ObscuroL2Bridge *ObscuroL2BridgeCallerSession) WrappedTokens(arg0 common.Address) (common.Address, error) {
	return _ObscuroL2Bridge.Contract.WrappedTokens(&_ObscuroL2Bridge.CallOpts, arg0)
}

// CreateWrappedToken is a paid mutator transaction binding the contract method 0x18bcac50.
//
// Solidity: function createWrappedToken(address crossChainAddress, string name, string symbol) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactor) CreateWrappedToken(opts *bind.TransactOpts, crossChainAddress common.Address, name string, symbol string) (*types.Transaction, error) {
	return _ObscuroL2Bridge.contract.Transact(opts, "createWrappedToken", crossChainAddress, name, symbol)
}

// CreateWrappedToken is a paid mutator transaction binding the contract method 0x18bcac50.
//
// Solidity: function createWrappedToken(address crossChainAddress, string name, string symbol) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) CreateWrappedToken(crossChainAddress common.Address, name string, symbol string) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.CreateWrappedToken(&_ObscuroL2Bridge.TransactOpts, crossChainAddress, name, symbol)
}

// CreateWrappedToken is a paid mutator transaction binding the contract method 0x18bcac50.
//
// Solidity: function createWrappedToken(address crossChainAddress, string name, string symbol) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactorSession) CreateWrappedToken(crossChainAddress common.Address, name string, symbol string) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.CreateWrappedToken(&_ObscuroL2Bridge.TransactOpts, crossChainAddress, name, symbol)
}

// ReceiveAssets is a paid mutator transaction binding the contract method 0x83bece4d.
//
// Solidity: function receiveAssets(address asset, uint256 amount, address receiver) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactor) ReceiveAssets(opts *bind.TransactOpts, asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.contract.Transact(opts, "receiveAssets", asset, amount, receiver)
}

// ReceiveAssets is a paid mutator transaction binding the contract method 0x83bece4d.
//
// Solidity: function receiveAssets(address asset, uint256 amount, address receiver) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) ReceiveAssets(asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.ReceiveAssets(&_ObscuroL2Bridge.TransactOpts, asset, amount, receiver)
}

// ReceiveAssets is a paid mutator transaction binding the contract method 0x83bece4d.
//
// Solidity: function receiveAssets(address asset, uint256 amount, address receiver) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactorSession) ReceiveAssets(asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.ReceiveAssets(&_ObscuroL2Bridge.TransactOpts, asset, amount, receiver)
}

// SendAssets is a paid mutator transaction binding the contract method 0xc432a46f.
//
// Solidity: function sendAssets(address asset, uint256 amount, address receiver) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactor) SendAssets(opts *bind.TransactOpts, asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.contract.Transact(opts, "sendAssets", asset, amount, receiver)
}

// SendAssets is a paid mutator transaction binding the contract method 0xc432a46f.
//
// Solidity: function sendAssets(address asset, uint256 amount, address receiver) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) SendAssets(asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.SendAssets(&_ObscuroL2Bridge.TransactOpts, asset, amount, receiver)
}

// SendAssets is a paid mutator transaction binding the contract method 0xc432a46f.
//
// Solidity: function sendAssets(address asset, uint256 amount, address receiver) returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactorSession) SendAssets(asset common.Address, amount *big.Int, receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.SendAssets(&_ObscuroL2Bridge.TransactOpts, asset, amount, receiver)
}

// SendNative is a paid mutator transaction binding the contract method 0x1888d712.
//
// Solidity: function sendNative(address receiver) payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactor) SendNative(opts *bind.TransactOpts, receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.contract.Transact(opts, "sendNative", receiver)
}

// SendNative is a paid mutator transaction binding the contract method 0x1888d712.
//
// Solidity: function sendNative(address receiver) payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) SendNative(receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.SendNative(&_ObscuroL2Bridge.TransactOpts, receiver)
}

// SendNative is a paid mutator transaction binding the contract method 0x1888d712.
//
// Solidity: function sendNative(address receiver) payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactorSession) SendNative(receiver common.Address) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.SendNative(&_ObscuroL2Bridge.TransactOpts, receiver)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _ObscuroL2Bridge.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.Fallback(&_ObscuroL2Bridge.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.Fallback(&_ObscuroL2Bridge.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ObscuroL2Bridge.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeSession) Receive() (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.Receive(&_ObscuroL2Bridge.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_ObscuroL2Bridge *ObscuroL2BridgeTransactorSession) Receive() (*types.Transaction, error) {
	return _ObscuroL2Bridge.Contract.Receive(&_ObscuroL2Bridge.TransactOpts)
}

// ObscuroL2BridgeCreatedWrappedTokenIterator is returned from FilterCreatedWrappedToken and is used to iterate over the raw logs and unpacked data for CreatedWrappedToken events raised by the ObscuroL2Bridge contract.
type ObscuroL2BridgeCreatedWrappedTokenIterator struct {
	Event *ObscuroL2BridgeCreatedWrappedToken // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ObscuroL2BridgeCreatedWrappedTokenIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ObscuroL2BridgeCreatedWrappedToken)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ObscuroL2BridgeCreatedWrappedToken)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ObscuroL2BridgeCreatedWrappedTokenIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ObscuroL2BridgeCreatedWrappedTokenIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ObscuroL2BridgeCreatedWrappedToken represents a CreatedWrappedToken event raised by the ObscuroL2Bridge contract.
type ObscuroL2BridgeCreatedWrappedToken struct {
	RemoteAddress common.Address
	LocalAddress  common.Address
	Name          string
	Symbol        string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCreatedWrappedToken is a free log retrieval operation binding the contract event 0x30c05779f384e0ae9d43bbf7ec4417f28bdc53d02a35551b6eb270a9c4c71dca.
//
// Solidity: event CreatedWrappedToken(address remoteAddress, address localAddress, string name, string symbol)
func (_ObscuroL2Bridge *ObscuroL2BridgeFilterer) FilterCreatedWrappedToken(opts *bind.FilterOpts) (*ObscuroL2BridgeCreatedWrappedTokenIterator, error) {

	logs, sub, err := _ObscuroL2Bridge.contract.FilterLogs(opts, "CreatedWrappedToken")
	if err != nil {
		return nil, err
	}
	return &ObscuroL2BridgeCreatedWrappedTokenIterator{contract: _ObscuroL2Bridge.contract, event: "CreatedWrappedToken", logs: logs, sub: sub}, nil
}

// WatchCreatedWrappedToken is a free log subscription operation binding the contract event 0x30c05779f384e0ae9d43bbf7ec4417f28bdc53d02a35551b6eb270a9c4c71dca.
//
// Solidity: event CreatedWrappedToken(address remoteAddress, address localAddress, string name, string symbol)
func (_ObscuroL2Bridge *ObscuroL2BridgeFilterer) WatchCreatedWrappedToken(opts *bind.WatchOpts, sink chan<- *ObscuroL2BridgeCreatedWrappedToken) (event.Subscription, error) {

	logs, sub, err := _ObscuroL2Bridge.contract.WatchLogs(opts, "CreatedWrappedToken")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ObscuroL2BridgeCreatedWrappedToken)
				if err := _ObscuroL2Bridge.contract.UnpackLog(event, "CreatedWrappedToken", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreatedWrappedToken is a log parse operation binding the contract event 0x30c05779f384e0ae9d43bbf7ec4417f28bdc53d02a35551b6eb270a9c4c71dca.
//
// Solidity: event CreatedWrappedToken(address remoteAddress, address localAddress, string name, string symbol)
func (_ObscuroL2Bridge *ObscuroL2BridgeFilterer) ParseCreatedWrappedToken(log types.Log) (*ObscuroL2BridgeCreatedWrappedToken, error) {
	event := new(ObscuroL2BridgeCreatedWrappedToken)
	if err := _ObscuroL2Bridge.contract.UnpackLog(event, "CreatedWrappedToken", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
